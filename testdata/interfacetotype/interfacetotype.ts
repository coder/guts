// Code generated by 'guts'. DO NOT EDIT.

// From codersdk/interfacetotype.go
export type Address = {
    street: string;
    city: string;
    country: string;
};

export type Comparable = string | number | boolean;

// From codersdk/interfacetotype.go
export type GenericContainer<T extends any> = {
    value: T;
    count: number;
};

// From codersdk/interfacetotype.go
export type Player<ID extends Comparable, P extends number> = User<ID> & Score<P> & {
    x: number;
    y: number;
};

// From codersdk/interfacetotype.go
export type Score<T extends number> = {
    points: T;
    level: number;
};

// From codersdk/interfacetotype.go
export type User<T extends Comparable> = {
    id: T;
    name: string;
    email: string;
    is_active: boolean;
};
